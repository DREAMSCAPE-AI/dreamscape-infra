# Docker Compose Monitoring Stack
# Stack de monitoring pour DreamScape

version: '3.8'

services:
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: dreamscape-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://localhost:9090'
      - '--storage.tsdb.retention.time=15d'
    networks:
      - dreamscape-network
    labels:
      - "com.dreamscape.service=prometheus"
      - "com.dreamscape.version=latest"

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: dreamscape-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - dreamscape-network
    labels:
      - "com.dreamscape.service=grafana"
      - "com.dreamscape.version=latest"

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: dreamscape-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - dreamscape-network
    labels:
      - "com.dreamscape.service=node-exporter"

  # AlertManager for alerts
  alertmanager:
    image: prom/alertmanager:latest
    container_name: dreamscape-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - dreamscape-network
    labels:
      - "com.dreamscape.service=alertmanager"

  # Log aggregation with Loki
  loki:
    image: grafana/loki:latest
    container_name: dreamscape-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - dreamscape-network
    labels:
      - "com.dreamscape.service=loki"

  # Promtail for log collection
  promtail:
    image: grafana/promtail:latest
    container_name: dreamscape-promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - dreamscape-network
    labels:
      - "com.dreamscape.service=promtail"

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: dreamscape-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger Collector
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    volumes:
      - jaeger_data:/tmp
    networks:
      - dreamscape-network
    labels:
      - "com.dreamscape.service=jaeger"

volumes:
  prometheus_data:
    name: dreamscape_prometheus_data
  grafana_data:
    name: dreamscape_grafana_data
  alertmanager_data:
    name: dreamscape_alertmanager_data
  loki_data:
    name: dreamscape_loki_data
  jaeger_data:
    name: dreamscape_jaeger_data

networks:
  dreamscape-network:
    external: true

# Usage:
# docker-compose -f docker-compose.monitoring.yml up -d
# 
# Services disponibles:
# - Prometheus: http://localhost:9090
# - Grafana: http://localhost:3000 (admin/admin)
# - AlertManager: http://localhost:9093
# - Jaeger: http://localhost:16686