# Docker Compose Principal - DreamScape Microservices
# Configuration de base pour le développement local


services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dreamscape-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dreamscape
      POSTGRES_USER: dreamscape_user
      POSTGRES_PASSWORD: dreamscape_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dreamscape-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dreamscape_user -d dreamscape"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: dreamscape-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dreamscape-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Gateway Service
  gateway:
    build:
      context: ./dreamscape-gateway
      dockerfile: Dockerfile.simple
    container_name: dreamscape-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "3100:3100"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_HOST=auth-service
      - AUTH_SERVICE_PORT=3001
      - USER_SERVICE_HOST=user-service
      - USER_SERVICE_PORT=3002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dreamscape-network
    healthcheck:
      test: ["CMD", "/usr/local/bin/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - "com.dreamscape.service=gateway"
      - "com.dreamscape.version=1.0.0"
      - "com.dreamscape.environment=development"

volumes:
  postgres_data:
    name: dreamscape_postgres_data
    driver: local
  redis_data:
    name: dreamscape_redis_data
    driver: local

networks:
  dreamscape-network:
    name: dreamscape-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Profils disponibles pour différents modes
# 
# Usage:
#   docker-compose up                           # Services de base seulement
#   docker-compose --profile dev up             # Services + Auth + User individuels
#   docker-compose --profile core-pod up        # Services + Core Pod
#   docker-compose --profile monitoring up      # + Monitoring stack