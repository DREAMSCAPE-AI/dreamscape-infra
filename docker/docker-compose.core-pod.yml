# Docker Compose for DreamScape Core Pod Testing
# DR-336: INFRA-010.3 - Configuration Supervisor et Orchestration
# Multi-process container with NGINX, Auth Service, and User Service

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: dreamscape-core-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: dreamscape
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./dreamscape-infrastructure/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - core-pod-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: dreamscape-core-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - core-pod-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Core Pod - Multi-service container with Supervisor
  core-pod:
    build:
      context: ./dreamscape-infrastructure/core-pod
      dockerfile: Dockerfile
    container_name: dreamscape-core-pod
    restart: unless-stopped
    ports:
      - "80:80"      # NGINX reverse proxy
      - "3001:3001"  # Auth Service (direct access for testing)
      - "3002:3002"  # User Service (direct access for testing)
    environment:
      # Node.js environment
      - NODE_ENV=production
      
      # Database connections
      - DATABASE_URL=mongodb://admin:password123@mongodb:27017/dreamscape?authSource=admin
      - REDIS_URL=redis://redis:6379
      
      # Auth Service configuration
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-core-pod
      - JWT_EXPIRES_IN=24h
      - AUTH_SERVICE_PORT=3001
      
      # User Service configuration  
      - USER_SERVICE_PORT=3002
      - UPLOAD_MAX_SIZE=5242880
      - UPLOAD_PATH=/app/user/uploads
      
      # Supervisor configuration
      - SUPERVISOR_USER=admin
      - SUPERVISOR_PASS=dreamscape_supervisor_123
      
      # Application URLs
      - CLIENT_URL=http://localhost:3000
      - AUTH_SERVICE_URL=http://localhost:3001
      - USER_SERVICE_URL=http://localhost:3002
      
      # Logging
      - LOG_LEVEL=info
      - LOG_FORMAT=combined
      
      # Monitoring
      - HEALTH_CHECK_INTERVAL=30
      - MEMORY_THRESHOLD=85
      - MEMORY_CRITICAL_THRESHOLD=95
    volumes:
      # Persistent logs
      - core_pod_logs:/var/log/supervisor
      - nginx_logs:/var/log/nginx
      
      # Persistent uploads
      - user_uploads:/app/user/uploads
      
      # Configuration files (for development)
      - ./dreamscape-infrastructure/core-pod/supervisor/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf:ro
      
      # Health status files (for external monitoring)
      - core_pod_status:/tmp
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - core-pod-network
    healthcheck:
      test: ["CMD", "python3", "/app/scripts/core_pod_health_check.py"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    labels:
      - "com.dreamscape.service=core-pod"
      - "com.dreamscape.version=1.0.0"
      - "com.dreamscape.environment=test"
      - "com.dreamscape.processes=nginx,auth-service,user-service"

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: dreamscape-core-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-core-pod.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://localhost:9090'
    depends_on:
      - core-pod
    networks:
      - core-pod-network
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: dreamscape-core-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - core-pod-network
    profiles:
      - monitoring

  # Log aggregation with Fluentd (optional)
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: dreamscape-core-fluentd
    restart: unless-stopped
    volumes:
      - ./monitoring/fluentd/fluent.conf:/fluentd/etc/fluent.conf:ro
      - core_pod_logs:/var/log/supervisor:ro
      - nginx_logs:/var/log/nginx:ro
    depends_on:
      - core-pod
    networks:
      - core-pod-network
    profiles:
      - logging

volumes:
  mongodb_data:
    name: dreamscape_core_mongodb_data
    driver: local
  redis_data:
    name: dreamscape_core_redis_data 
    driver: local
  core_pod_logs:
    name: dreamscape_core_pod_logs
    driver: local
  nginx_logs:
    name: dreamscape_core_nginx_logs
    driver: local
  user_uploads:
    name: dreamscape_core_user_uploads
    driver: local
  core_pod_status:
    name: dreamscape_core_pod_status
    driver: local
  prometheus_data:
    name: dreamscape_core_prometheus_data
    driver: local
  grafana_data:
    name: dreamscape_core_grafana_data
    driver: local

networks:
  core-pod-network:
    name: dreamscape-core-pod-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16