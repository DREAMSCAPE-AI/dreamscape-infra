name: WARRIOR DEPLOY

on:
  push:
    branches: [main, DR-51-US-INFRA-002.3---Configuration-du-d√©ploiement]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        default: "staging"
        type: choice
        options:
          - dev
          - staging
          - production
      service:
        description: "Service"
        required: true
        default: "frontend"
        type: choice
        options:
          - frontend
          - backend
          - both

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy via appleboy/ssh-action
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ github.event.inputs.environment == 'production' && secrets.VM_HOST_PRODUCTION || github.event.inputs.environment == 'staging' && secrets.VM_HOST_STAGING || secrets.VM_HOST_DEV }}
          username: ubuntu
          key: ${{ github.event.inputs.environment == 'production' && secrets.SSH_PRIVATE_KEY_PRODUCTION || github.event.inputs.environment == 'staging' && secrets.SSH_PRIVATE_KEY_STAGING || secrets.SSH_PRIVATE_KEY_DEV }}
          script: |
            ENV="${{ github.event.inputs.environment || 'staging' }}"
            SERVICE="${{ github.event.inputs.service || 'frontend' }}"
            
            echo "üöÄ Deploying $SERVICE to $ENV"
            
            if [ "$SERVICE" = "frontend" ] || [ "$SERVICE" = "both" ]; then
              echo "üì¶ Deploying Frontend..."
              docker stop dreamscape-frontend-$ENV 2>/dev/null || true
              docker rm dreamscape-frontend-$ENV 2>/dev/null || true
              docker pull dreamscape/frontend:latest
              docker run -d \
                --name dreamscape-frontend-$ENV \
                --restart unless-stopped \
                -p 80:80 \
                -e NODE_ENV=$ENV \
                dreamscape/frontend:latest
              
              sleep 10
              if docker ps | grep dreamscape-frontend-$ENV; then
                echo "‚úÖ Frontend OK"
              else
                echo "‚ùå Frontend FAILED"
                exit 1
              fi
            fi
            
            if [ "$SERVICE" = "backend" ] || [ "$SERVICE" = "both" ]; then
              echo "üì¶ Deploying Backend..."
              docker stop dreamscape-backend-$ENV 2>/dev/null || true
              docker rm dreamscape-backend-$ENV 2>/dev/null || true
              docker pull dreamscape/backend:latest
              docker run -d \
                --name dreamscape-backend-$ENV \
                --restart unless-stopped \
                -p 8080:8080 \
                -e NODE_ENV=$ENV \
                dreamscape/backend:latest
              
              sleep 10
              if docker ps | grep dreamscape-backend-$ENV; then
                echo "‚úÖ Backend OK"
              else
                echo "‚ùå Backend FAILED"
                exit 1
              fi
            fi
            
            echo "üéâ DEPLOYMENT COMPLETE!"
            docker ps | grep dreamscape