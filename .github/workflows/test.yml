name: Test SSH Keys

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment à tester"
        required: true
        default: "staging"
        type: choice
        options:
          - dev
          - staging
          - production

jobs:
  test-ssh:
    runs-on: ubuntu-latest
    steps:
      - name: Create SSH key files
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY_DEV }}"       | tr -d '\r' > cle_dev.key
          echo "${{ secrets.SSH_PRIVATE_KEY_STAGING }}"   | tr -d '\r' > cle_staging.key
          echo "${{ secrets.SSH_PRIVATE_KEY_PRODUCTION }}"| tr -d '\r' > cle_prod.key
          chmod 600 cle_*.key

      - name: Select VM host and SSH key
        id: select
        env:
          VM_HOST_DEV: ${{ secrets.VM_HOST_DEV }}
          VM_HOST_STAGING: ${{ secrets.VM_HOST_STAGING }}
          VM_HOST_PRODUCTION: ${{ secrets.VM_HOST_PRODUCTION }}
        run: |
          case "${{ github.event.inputs.environment }}" in
            "production")
              echo "host=${VM_HOST_PRODUCTION}" >> $GITHUB_OUTPUT
              echo "key=cle_prod.key" >> $GITHUB_OUTPUT
              ;;
            "staging")
              echo "host=${VM_HOST_STAGING}" >> $GITHUB_OUTPUT
              echo "key=cle_staging.key" >> $GITHUB_OUTPUT
              ;;
            "dev"|*)
              echo "host=${VM_HOST_DEV}" >> $GITHUB_OUTPUT
              echo "key=cle_dev.key" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Test SSH connection
        run: |
          ssh -i "${{ steps.select.outputs.key }}" -o StrictHostKeyChecking=no ubuntu@${{ steps.select.outputs.host }} "echo ✅ SSH OK on ${{ github.event.inputs.environment }}"
